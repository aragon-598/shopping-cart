package com.store.shopping_cart.shoppingcart.dto;

import java.util.Date;

import com.store.shopping_cart.shoppingcart.security.dto.UserResponse;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.annotation.Nullable;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.PositiveOrZero;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.Setter;

@AllArgsConstructor
@RequiredArgsConstructor
@Setter
@Getter
public class OrderResponse {
    @Schema(name = "idOrder",required = false,example = "1",defaultValue = "2",description = "This key is autogenerated, it's not necesary")
    private Integer idOrder;
    @Schema(name = "totalAmount",required = false,example = "1",defaultValue = "2",description = "This key is autocalculate, it's not necesary")
    @PositiveOrZero
    private double totalAmount;
    @Schema(name = "totalAmount",required = false,example = "1",defaultValue = "2",description = "this key is to indicate, total items of order")
    @Min(0)
    private int totalItems;
    @Schema(name = "status",required = true,example = "in progress",defaultValue = "in progress",description = "this key indicates the status of the order")
    private String status;
    @Schema(name = "idUser",required = true,example = "1",defaultValue = "2",description = "this key indicates the user")
    private UserResponse idUser;
    @Schema(name = "creatDate",required = true,example = "",defaultValue = "",description = "this key indicates user creation date")
    private Date creatDate;
    @Schema(name = "updateDate",required = true,example = "",defaultValue = "",description = "this key indicates user update date")
    private Date updateDate;
    @Schema(name = "idPayment",required = true,example = "",defaultValue = "",description = "this key indicates payment")
    @Nullable
    private PaymentResponse idPayment;
}
